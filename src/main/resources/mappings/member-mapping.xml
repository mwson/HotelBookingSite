<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="MemberDAO">
	<!-- "사용자" 비밀번호 조회 -->
	<select id="memberCheck" parameterType="String" resultType="String">
		SELECT pwd
		FROM member
		WHERE id=#{id}
	</select>
	
	<!-- "사용자, 회원정보" 조회 -->
	<select id="getMember" parameterType="String" resultType="member">
		SELECT *
		FROM member
		WHERE id=#{id}
	</select>
	
	<!-- "사용자, 회원가입" 우편번호 조회 -->
	<select id="selectAddressByDong" parameterType="String" resultType="address">
		SELECT *
		FROM address
		WHERE dong LIKE '%' || #{dong} || '%'
	</select>
	
	<!-- "사용자, 회원가입" 등록(가입) -->
	<insert id="insertMember">
		INSERT INTO member(id, pwd, name, email, zip_num, address, phone)
		VALUES(#{id}, #{pwd}, #{name}, #{email}, #{zip_num}, #{address}, #{phone})
	</insert>
	
	<!-- "사용자, 아이디 및 비밀번호 찾기" 아이디 조회 -->
	<select id="getMemberByNameAndEmail" resultType="member">
		SELECT *
		FROM member
		WHERE name=#{name}
			AND email=#{email}
	</select>
	
	<!-- "사용자, 아이디 및 비밀번호 찾기" 비밀번호 조회 -->
	<select id="findPassword" resultType="member">
		SELECT *
		FROM member
		WHERE id=#{id}
			AND name=#{name}
			AND email=#{email}
	</select>
	
	<!-- "사용자, 아이디 및 비밀번호 찾기" 비밀번호 수정 -->
	<update id="changePassword">
		UPDATE member
		SET pwd=#{pwd}
		WHERE id=#{id}
	</update>
	
	<!-- "사용자, 회원정보" 수정 -->
	<update id="updateMember" parameterType="member">
		update member
		set pwd=#{pwd}, email=#{email}, zip_num=#{zip_num}, address=#{address}, phone=#{phone} 
		where id=#{id}
	</update>
	
	<!-- "관리자, 회원목록" 조회 -->
	<select id="listMember" parameterType="String" resultType="member">
		SELECT *
		FROM member
		WHERE name LIKE '%' || #{key} || '%'
		ORDER BY regdate DESC
	</select>
	
	<!-- "관리자, 회원목록" 총 개수 조회 -->
	<select id="countMemberList" parameterType="String" resultType="int">
		SELECT COUNT(*)
		FROM member
		WHERE name LIKE '%' || #{name} || '%'
	</select>
	
	<!-- "관리자, 회원목록" 조회 및 페이징 -->
	<select id="listMemberwithPaging" parameterType="HashMap" resultType="member">
		<![CDATA[
		SELECT id, pwd, name, email, zip_num, address, phone, useyn, regdate
		FROM(SELECT ROW_NUMBER() OVER(ORDER BY name) rn, id, pwd, name, email, zip_num, address, phone, useyn, regdate
			FROM member
			WHERE name LIKE '%' || #{key} || '%')
		WHERE rn <= #{criteria.pageNum} * #{criteria.rowsPerPage}
		AND rn > (#{criteria.pageNum} - 1) * #{criteria.rowsPerPage}
		ORDER BY regdate DESC
		]]>
	</select>
</mapper>